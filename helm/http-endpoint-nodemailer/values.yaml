# Default values for http-endpoint-nodemailer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

config: 
  default: #required structure
    submitPath: /send
    submitPort: 8080
    bodySizeLimit: 100kb #express body-parser->urlencoded.limit
    debugRequests: false
    smtp:
      host: mail.host.com
      port: 25
      auth:
        user: username
        pass: password
    mail:
      from: "fromWhom@mail.com"
      to: "toWhom@mail.com"
      subject: "Form Submitted"
      body: | #handlebars formatting with an express "req.body" object, body has been body-parser (urlencode, json encoded)
        <p>Form submission</p>
        <p>{{{json body}}}</p>
    resultPage: | #page after submission
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <title>Submission complete</title>
      </head>
      <body>
          Submission Complete
      </body>
      </html>
    errorPage: |
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <title>Something went wrong, try again later</title>
      </head>
      <body>
          Something went wrong, try again later
      </body>
      </html>
  development: #required structure #overrides defaults based on ENV setting
  test: #required structure
  production: #required structure

replicaCount: 1

image:
  repository: docker.io/cdeadspine/nodemailer-contact-form
  pullPolicy: IfNotPresent #Always #for development only, you probably want IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

#important security lockdown
podSecurityContext:
  fsGroup: 1001

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
